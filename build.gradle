plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id "org.sonarqube" version "3.4.0.2513"
	id "com.jfrog.artifactory" version "4.28.2"
	id 'maven-publish'
}

group = 'com.tejmanne'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.2.Final'
	implementation group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.29.2'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

compileJava {
	options.compilerArgs = [
		"-Amapstruct.defaultComponentModel=spring"
	]
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', '$buildDir/generated/sources/annotationProcessor/java/']
        }
    }
}

publishing {
	publications{
		bootJava(MavenPublication) {
			artifact tasks.named("bootJar")
		}
	}
	repositories {
		maven {
			url 'https://tejazz.jfrog.io/artifactory'
		}
	}
}

artifactory {
	//The base Artifactory URL if not overridden by the publisher/resolver
	contextUrl = 'https://tejazz.jfrog.io/artifactory'
	publish {
		//The base Artifactory URL for the publisher
		contextUrl = 'https://tejazz.jfrog.io/artifactory'
		//A closure defining publishing information
		repository {
			repoKey = 'RnD'    //The Artifactory repository key to publish to
			username = 'admin'    //The publisher user name
			password = 'Test!234'    //The publisher password or API key
		}
		defaults {
			//List of Gradle Publications (names or objects) from which to collect the list of artifacts to be deployed to Artifactory.
			publications ('mavenJava')
			//List of Gradle Configurations (names or objects) from which to collect the list of artifacts to be deployed to Artifactory.
			publishConfigs('archives', 'published')
			//Optional map of properties to attach to all published artifacts
			properties = ['qa.level': 'basic', 'q.os': 'win32, deb, osx']
			/*
            The properties closure in the "defaults" task uses the following syntax:
            properties {
                publicationName 'group:module:version:classifier@type', key1:'value1', key2:'value2', ...
            }
            publicationName: A valid name for a publication of the project. You can use all to apply the properties to all publications.
            group:module:version:classifier@type: A filter that specifies the artifacts to which properties should be attached.
            The filter may contain wildcards: * for all characters or ? for a single character.
            key:'value': A list of key/value properties that will be attached to to the published artifacts matching the filter.
            */
			properties {                                                   //Optional closure to attach properties to artifacts based on a list of artifact patterns per project publication
				mavenJava 'org.jfrog:*:*:*@*', key1: 'val1'                //The property key1=val1 will be set on all artifacts part of the mavenJava publication and with group org.jfrog
				all 'org.jfrog:shared:1.?:*@*', key2: 'val2', key3: 'val3' //The properties key2 and key3 will be set on all published artifacts (all publications) with group:artifact:version
				//equal to org.jfrog:shared:1.?
			}
			publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
			publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
			publishPom = true   //Publish generated POM files to Artifactory (true by default).
			publishIvy = true   //Publish generated Ivy descriptor files to Artifactory (true by default).
		}
	}
	// Redefine basic properties of the build info object
	clientConfig.setIncludeEnvVars(true)
	clientConfig.setEnvVarsExcludePatterns('*password*,*secret*')
	clientConfig.setEnvVarsIncludePatterns('*not-secret*')
	clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new java.util.Date().toString())
	clientConfig.info.setBuildName('new-strange-name')
	clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
	clientConfig.info.setProject('project-key')
	clientConfig.timeout = 600 // Artifactory connection timeout (in seconds). The default timeout is 300 seconds.
	clientConfig.setInsecureTls(false) // Set to true to skip TLS certificates verification (false by default).
}